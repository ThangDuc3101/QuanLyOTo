//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace quanlyoto.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/wcfOnDb")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="car", Namespace="http://schemas.datacontract.org/2004/07/wcfOnDb")]
    [System.SerializableAttribute()]
    public partial class car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int conLaiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int daBanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string originalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int conLai {
            get {
                return this.conLaiField;
            }
            set {
                if ((this.conLaiField.Equals(value) != true)) {
                    this.conLaiField = value;
                    this.RaisePropertyChanged("conLai");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int daBan {
            get {
                return this.daBanField;
            }
            set {
                if ((this.daBanField.Equals(value) != true)) {
                    this.daBanField = value;
                    this.RaisePropertyChanged("daBan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string original {
            get {
                return this.originalField;
            }
            set {
                if ((object.ReferenceEquals(this.originalField, value) != true)) {
                    this.originalField = value;
                    this.RaisePropertyChanged("original");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        quanlyoto.ServiceReference1.CompositeType GetDataUsingDataContract(quanlyoto.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<quanlyoto.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(quanlyoto.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInfo", ReplyAction="http://tempuri.org/IService1/getInfoResponse")]
        quanlyoto.ServiceReference1.car[] getInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInfo", ReplyAction="http://tempuri.org/IService1/getInfoResponse")]
        System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> getInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInfoCount", ReplyAction="http://tempuri.org/IService1/getInfoCountResponse")]
        int getInfoCount(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getInfoCount", ReplyAction="http://tempuri.org/IService1/getInfoCountResponse")]
        System.Threading.Tasks.Task<int> getInfoCountAsync(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertCar", ReplyAction="http://tempuri.org/IService1/insertCarResponse")]
        int insertCar(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertCar", ReplyAction="http://tempuri.org/IService1/insertCarResponse")]
        System.Threading.Tasks.Task<int> insertCarAsync(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCar", ReplyAction="http://tempuri.org/IService1/deleteCarResponse")]
        int deleteCar(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCar", ReplyAction="http://tempuri.org/IService1/deleteCarResponse")]
        System.Threading.Tasks.Task<int> deleteCarAsync(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editCar", ReplyAction="http://tempuri.org/IService1/editCarResponse")]
        int editCar(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editCar", ReplyAction="http://tempuri.org/IService1/editCarResponse")]
        System.Threading.Tasks.Task<int> editCarAsync(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/findCar", ReplyAction="http://tempuri.org/IService1/findCarResponse")]
        int findCar(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/findCar", ReplyAction="http://tempuri.org/IService1/findCarResponse")]
        System.Threading.Tasks.Task<int> findCarAsync(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSelect", ReplyAction="http://tempuri.org/IService1/getSelectResponse")]
        quanlyoto.ServiceReference1.car[] getSelect(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSelect", ReplyAction="http://tempuri.org/IService1/getSelectResponse")]
        System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> getSelectAsync(quanlyoto.ServiceReference1.car c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/banDuoc", ReplyAction="http://tempuri.org/IService1/banDuocResponse")]
        quanlyoto.ServiceReference1.car[] banDuoc();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/banDuoc", ReplyAction="http://tempuri.org/IService1/banDuocResponse")]
        System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> banDuocAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/conlai", ReplyAction="http://tempuri.org/IService1/conlaiResponse")]
        quanlyoto.ServiceReference1.car[] conlai();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/conlai", ReplyAction="http://tempuri.org/IService1/conlaiResponse")]
        System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> conlaiAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : quanlyoto.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<quanlyoto.ServiceReference1.IService1>, quanlyoto.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public quanlyoto.ServiceReference1.CompositeType GetDataUsingDataContract(quanlyoto.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<quanlyoto.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(quanlyoto.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public quanlyoto.ServiceReference1.car[] getInfo() {
            return base.Channel.getInfo();
        }
        
        public System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> getInfoAsync() {
            return base.Channel.getInfoAsync();
        }
        
        public int getInfoCount(quanlyoto.ServiceReference1.car c) {
            return base.Channel.getInfoCount(c);
        }
        
        public System.Threading.Tasks.Task<int> getInfoCountAsync(quanlyoto.ServiceReference1.car c) {
            return base.Channel.getInfoCountAsync(c);
        }
        
        public int insertCar(quanlyoto.ServiceReference1.car c) {
            return base.Channel.insertCar(c);
        }
        
        public System.Threading.Tasks.Task<int> insertCarAsync(quanlyoto.ServiceReference1.car c) {
            return base.Channel.insertCarAsync(c);
        }
        
        public int deleteCar(quanlyoto.ServiceReference1.car c) {
            return base.Channel.deleteCar(c);
        }
        
        public System.Threading.Tasks.Task<int> deleteCarAsync(quanlyoto.ServiceReference1.car c) {
            return base.Channel.deleteCarAsync(c);
        }
        
        public int editCar(quanlyoto.ServiceReference1.car c) {
            return base.Channel.editCar(c);
        }
        
        public System.Threading.Tasks.Task<int> editCarAsync(quanlyoto.ServiceReference1.car c) {
            return base.Channel.editCarAsync(c);
        }
        
        public int findCar(quanlyoto.ServiceReference1.car c) {
            return base.Channel.findCar(c);
        }
        
        public System.Threading.Tasks.Task<int> findCarAsync(quanlyoto.ServiceReference1.car c) {
            return base.Channel.findCarAsync(c);
        }
        
        public quanlyoto.ServiceReference1.car[] getSelect(quanlyoto.ServiceReference1.car c) {
            return base.Channel.getSelect(c);
        }
        
        public System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> getSelectAsync(quanlyoto.ServiceReference1.car c) {
            return base.Channel.getSelectAsync(c);
        }
        
        public quanlyoto.ServiceReference1.car[] banDuoc() {
            return base.Channel.banDuoc();
        }
        
        public System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> banDuocAsync() {
            return base.Channel.banDuocAsync();
        }
        
        public quanlyoto.ServiceReference1.car[] conlai() {
            return base.Channel.conlai();
        }
        
        public System.Threading.Tasks.Task<quanlyoto.ServiceReference1.car[]> conlaiAsync() {
            return base.Channel.conlaiAsync();
        }
    }
}
